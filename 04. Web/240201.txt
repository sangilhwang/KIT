댓글 작성
- 블로그 프로젝트에서는 목록 화면에서는 댓글을 보여주기만 하고 댓글 작성은 글 내부에서만 가능
- 피드 페이지에서는 댓글 달기 기능을 한 화면에서 각 post마다 구현해야함

- 사용자의 입력을 받는 input을 직접 만들수도 있지만 Form 클래스를 사용하는 것이 Django의 기본 규칙

- 이전까지는 forms.Form 클래스를 사용햇지만 ModelForm 클래스를 사용하면
  DB 테이블에 해당하는 모델 클래스와 연관된 기능들을 제공함

--- Django 모델에 있는 필드인 models.CharField()나 models.IntegerField()는
     ModelForm 에서 forms.CharField()나 forms.IntegerField()와 같은 Form에서 사용 하는 Field로 자동 변환됨

- ModelForm 인스턴스에서 save() 를 호출하면 전달받은 데이터를 사용해서 지정된 모델 인스턴스를 생성
--- 오류가 발생
--- 발생한 오류는 posts.comment 테이블의 post_id 는 NULL을 허용하지 않는다는 메시지

--- 오류 해결 방법은 두 가지
----- 1. CommentForm 으로 Comment 객체를 일단 만들되, 
          메모리 상에 객체를 만들고 필요한 데이터를 나중에 채우기
----- 2. CommentForm에 Null을 허용하지 않는 모든 필드를 선언하고, 인스턴스 생성 시 유효한 데이터를 전달


ModelForm에 모든 필드를 지정하고 별도의 작업 없이 save()만 호출하면
새 모델 인스턴스가 생성되므로 fields 리스트의 모든 필드를 지정하는게 적절하다고 생각할 수 있음
- 하지만 Form에서 전달받는 데이터는 **사용자가 입력한 데이터** 여야 한다

Comment 를 생성하기 위해 필요한 데이터는 3가지
1. 어떤 글의 댓글인지(Post)
2. 어떤 사용자의 댓글인지(User)
3. 어떤 내용을 가지고 있는지(Content)
- 여기서 사용자가 입력하는 데이터는 1번과 3번
- 어떤 사용자가 댓글을 생성했는지는 사용자가 입력한 데이터에 있으면 안되는 값이며,
  시스템에서 자동으로 입력해주어야 함

- > 그러므로 CommentForm은 post와 content 만을 전달받은 값으로 지정해야 하며
     작성자 정보인 user는 시스템에서 채워넣어야 함

댓글 작성 처리를 위한 view 구현
- 지금까지는 form을 사용한 POST 요청으로 받은 데이터를 같은 페이지에서 처리했음
- 많은 역할을 하나의 View에서 처리하게 되면 코드를 유지보수하기 어려워짐
- 댓글 작성 form에서 전송한 데이터는 별도의 댓글 작성 View에서 처리

View에 require_POST 데코레이터를 사용하면 오로지 POST 유형의 요청만 처리하며
이 외의 유형의 요청에는 405 Method Not Allowed 응답을 반환함

지금까지 form 태그에서 지정해본 속성값
- method : GET 과 POST 중 어떤 방식으로 데이터를 전달할 것인지 정의
- enctype : 기본값과 파일 전송을 위한 값 중 선택

- 이번에 사용할 속성값은 action
--- action : 이 form의 요청을 어디로 보낼지를 정의
----- 비어있는 경우에는 현재 브라우저의 URL을 사용

작성 완료 후 원하는 Post 위치로 이동
- 글에 댓글을 추가한 후, 피드 페이지의 최상단이 아니라 댓글을 추가한 글로 돌아올 수 있도록 구현
--- HTML 요소의 id 속성을 활용할 수 있음

URL 뒤에 #{HTML 요소의 id} 를 입력하면 해당 id를 가진 요소의 위치로 이동하게 됨

글의 댓글 수 표시
- Post에 몇 개의 Comment가 연결되었는지 표시
- 연결된 객체의 정보가 전부 필요하지 않고 단순히 개수만 필요하다면 QuerySet 의 Count 메서드를 사용

댓글 삭제
- 삭제한 댓글의 id 정보를 받고, 받은 id에 해당하는 Comment 객체를 delete() 메서드로 삭제
--- 댓글 삭제는 DB의 내용을 수정하는 명령이므로 method가 POST일 때만 동작해야 함

- Comment를 작성한 소유자가 아니어도 적당한 Comment의 id 값을 사용해 comment_delete에
  삭제 요청을 하면 댓글을 삭제할 수 있음 (문제 있음)
- View 함수에서 삭제 요청이 들어온 Comment의 작성자가 요청한 사용자와 일치하는지 확인 필요

글 작성 기본구조 구현
- View : post_add
- URL : 127.0.0.1:800/posts/post_add/
- Template : templates/posts/post_add.html





