가장 기본적인 형태의 프로젝트 시작 루틴

0. 터미널 cmd로 설정

1. 가상환경 생성 / 활성화

conda create -n "가상환경 이름" python=버전
 - 예시 : conda create -n blog_env python=3.11

가상환경 목록 조회
conda env list

활성화
conda activate "가상환경 이름"

2. 프로젝트 시작
django-admin startproject "프로젝트 이름" .

* 프로젝트 뒤의 " ."은 현 위치에서 프로젝트 시작한다는 의미

3. 앱 시작

python manage.py startapp "앱이름"

4. 프로젝트 - settings - INSTALLED_APPS [] 에 앱 추가






Visual Studio Code - Terminal 명령어

conda env list : 가상환경 목록 검색

conda activate "가상환경이름" : 가상환경 실행

python manage.py runserver : 서버 실행

ctrl + c = 서버 종료

python manage.py startapp "앱이름" : 앱이름의 앱 생성

모델에 생성한 것을 db에 반영하는 것을 마이그레이션

1. 마이그레이션 파일 생성
python manage.py makemigrations "앱이름"
- 앱이름은 선택사항

2. 마이그레이션 적용
python manage.py migrate

python manage.py createsuperuser : 관리자 계정 생성





Django ORM (Object-Relational Mapping / 객체 관계 매핑)
 - 데이터베이스의 데이터를 객체와 연결해주는 기능
 - Model클래스는 데이터베이스의 테이블의 형태를 나타냄
 - Model클래스를 통해 데이터를 가져올 때에는 모델의 objects 속성을 사용

 - 전체 데이터 목록 가져오기
 - - 모델.objects.all()

 - 특정 조건을 만족하는 데이터 한 개의 정보를 가져오기
 - - 모델.objects.get(조건) 

 - 특정 조건을 만족하는 데이터들의 정보 가져오기
 - - 모델.objects.filter(조건)


웹에서 데이터를 전송하는 방법
- GET
- 서버에 보낼 데이터가 공개되어도 상관 없는 경우

- POST
- 요청 자체에 데이터를 담아 보내며 외부에 노출되어서는 안되는 비밀값을 사용할 때


